{"ast":null,"code":"var _jsxFileName = \"/home/sevastians/Code/Assignments/week8/assignments/react-mad-libs/src/App.js\",\n    _s = $RefreshSig$();\n\nimport \"./App.css\";\nimport React, { useState } from \"react\"; // data\n\nimport MadLibsData from \"./data/MadLibs.js\"; // components\n\nimport Selector from \"./components/Selector.js\";\nimport Story from \"./components/Story.js\";\nimport WordForm from \"./components/WordForm.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  // states\n  console.log(\"rerender\");\n  const [selectedMadLib, setSelectedMadLib] = useState(MadLibsData[0]);\n  const [showWordOrStory, setWordOrStory] = useState(true); // event handlers\n\n  const updateMadLibWord = (wordIndex, wordValue) => {\n    let newSelectedMadLib = { ...selectedMadLib\n    };\n    newSelectedMadLib.words[wordIndex] = { ...newSelectedMadLib.words[wordIndex],\n      userWord: wordValue\n    }; // console.log(selectedMadLib.words)\n\n    setSelectedMadLib(newSelectedMadLib);\n  };\n\n  function render() {\n    console.log(showWordOrStory);\n    return showWordOrStory ? /*#__PURE__*/_jsxDEV(WordForm, {\n      words: selectedMadLib.words,\n      updateMadLibWord: updateMadLibWord\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 6\n    }, this) : /*#__PURE__*/_jsxDEV(Story, {\n      text: selectedMadLib.getText()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 6\n    }, this);\n  } // renders\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"MadLibs!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Selector, {\n      data: MadLibsData,\n      setSelectedMadLib: setSelectedMadLib\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setWordOrStory(!showWordOrStory),\n      children: \"Click To see Story!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), showWordOrStory ? /*#__PURE__*/_jsxDEV(WordForm, {\n      words: selectedMadLib.words,\n      updateMadLibWord: updateMadLibWord\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 6\n    }, this) : /*#__PURE__*/_jsxDEV(Story, {\n      text: selectedMadLib.getText()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 6\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"rqeplB0pBEfnX8ECeJftQBYd7TE=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/sevastians/Code/Assignments/week8/assignments/react-mad-libs/src/App.js"],"names":["React","useState","MadLibsData","Selector","Story","WordForm","App","console","log","selectedMadLib","setSelectedMadLib","showWordOrStory","setWordOrStory","updateMadLibWord","wordIndex","wordValue","newSelectedMadLib","words","userWord","render","getText"],"mappings":";;;AAAA,OAAO,WAAP;AACA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC,C,CAEA;;AACA,OAAOC,WAAP,MAAwB,mBAAxB,C,CAEA;;AACA,OAAOC,QAAP,MAAqB,0BAArB;AACA,OAAOC,KAAP,MAAkB,uBAAlB;AACA,OAAOC,QAAP,MAAqB,0BAArB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACA,QAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCT,QAAQ,CAACC,WAAW,CAAC,CAAD,CAAZ,CAApD;AACA,QAAM,CAACS,eAAD,EAAkBC,cAAlB,IAAoCX,QAAQ,CAAC,IAAD,CAAlD,CAJa,CAKb;;AACA,QAAMY,gBAAgB,GAAG,CAACC,SAAD,EAAYC,SAAZ,KAA0B;AACjD,QAAIC,iBAAiB,GAAG,EAAE,GAAGP;AAAL,KAAxB;AAEAO,IAAAA,iBAAiB,CAACC,KAAlB,CAAwBH,SAAxB,IAAqC,EACnC,GAAGE,iBAAiB,CAACC,KAAlB,CAAwBH,SAAxB,CADgC;AAEnCI,MAAAA,QAAQ,EAAEH;AAFyB,KAArC,CAHiD,CAOjD;;AACAL,IAAAA,iBAAiB,CAACM,iBAAD,CAAjB;AACD,GATD;;AAWA,WAASG,MAAT,GAAiB;AACfZ,IAAAA,OAAO,CAACC,GAAR,CAAYG,eAAZ;AACA,WAAQA,eAAe,gBACtB,QAAC,QAAD;AAAU,MAAA,KAAK,EAAEF,cAAc,CAACQ,KAAhC;AAAuC,MAAA,gBAAgB,EAAEJ;AAAzD;AAAA;AAAA;AAAA;AAAA,YADsB,gBAGtB,QAAC,KAAD;AAAO,MAAA,IAAI,EAAEJ,cAAc,CAACW,OAAf;AAAb;AAAA;AAAA;AAAA;AAAA,YAHD;AAKC,GAxBU,CA0Bb;;;AACA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,QAAD;AAAU,MAAA,IAAI,EAAElB,WAAhB;AAA6B,MAAA,iBAAiB,EAAEQ;AAAhD;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE;AAAQ,MAAA,OAAO,EAAE,MAAIE,cAAc,CAAC,CAACD,eAAF,CAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF,eAKE;AAAA;AAAA;AAAA;AAAA,YALF,EAMGA,eAAe,gBACjB,QAAC,QAAD;AAAU,MAAA,KAAK,EAAEF,cAAc,CAACQ,KAAhC;AAAuC,MAAA,gBAAgB,EAAEJ;AAAzD;AAAA;AAAA;AAAA;AAAA,YADiB,gBAGjB,QAAC,KAAD;AAAO,MAAA,IAAI,EAAEJ,cAAc,CAACW,OAAf;AAAb;AAAA;AAAA;AAAA;AAAA,YATD;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAaD;;GAxCQd,G;;KAAAA,G;AA0CT,eAAeA,GAAf","sourcesContent":["import \"./App.css\"\nimport React, { useState } from \"react\"\n\n// data\nimport MadLibsData from \"./data/MadLibs.js\"\n\n// components\nimport Selector from \"./components/Selector.js\"\nimport Story from \"./components/Story.js\"\nimport WordForm from \"./components/WordForm.js\"\n\nfunction App() {\n  // states\n  console.log(\"rerender\")\n  const [selectedMadLib, setSelectedMadLib] = useState(MadLibsData[0])\n  const [showWordOrStory, setWordOrStory] = useState(true)\n  // event handlers\n  const updateMadLibWord = (wordIndex, wordValue) => {  \n    let newSelectedMadLib = { ...selectedMadLib }\n  \n    newSelectedMadLib.words[wordIndex] = {\n      ...newSelectedMadLib.words[wordIndex],\n      userWord: wordValue\n    }\n    // console.log(selectedMadLib.words)\n    setSelectedMadLib(newSelectedMadLib)\n  }\n\n  function render(){\n    console.log(showWordOrStory)\n    return (showWordOrStory ? \n     <WordForm words={selectedMadLib.words} updateMadLibWord={updateMadLibWord} />\n    : \n     <Story text={selectedMadLib.getText()} />)\n\n    }\n  \n  // renders\n  return (\n    <div className=\"App\">\n      <h2>MadLibs!</h2>\n      <hr />\n      <Selector data={MadLibsData} setSelectedMadLib={setSelectedMadLib} />\n      <button onClick={()=>setWordOrStory(!showWordOrStory)}>Click To see Story!</button>\n      <hr />\n      {showWordOrStory ? \n     <WordForm words={selectedMadLib.words} updateMadLibWord={updateMadLibWord} />\n    : \n     <Story text={selectedMadLib.getText()} />}\n    </div>\n  )\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}